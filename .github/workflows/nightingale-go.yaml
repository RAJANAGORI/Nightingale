name: Release Binary from Local Source

on:
  push:
    branches:
      - main  # Change to your target branch

jobs:
  release:
    name: Build & Upload Binary
    runs-on: ubuntu-latest

    steps:
      - name: Checkout this repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: stable

      - name: Determine New Release Tag
        id: versioning
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.TOKEN }}
          script: |
            const { data: releases } = await github.rest.repos.listReleases({
              owner: context.repo.owner,
              repo: context.repo.repo,
            });

            let nextTag = "v1.1.2"; // Default if no releases exist
            if (releases.length > 0) {
              const latestTag = releases[0].tag_name || "v1.1.1";
              const parts = latestTag.match(/v(\d+)\.(\d+)\.(\d+)/);
              if (parts) {
                let [_, major, minor, patch] = parts.map(Number);
                patch++; // Increment patch version
                nextTag = `v${major}.${minor}.${patch}`;
              }
            }

            console.log(`Next release: ${nextTag}`);
            core.setOutput("new_tag", nextTag);

      - name: Create a New GitHub Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ steps.versioning.outputs.new_tag }}
          release_name: Release ${{ steps.versioning.outputs.new_tag }}
          body: "Automated release from the latest commit."
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}

      - name: Build Go Binaries
        working-directory: nightingale-go/src/nightingale
        run: |
          mkdir -p dist
          GOOS=linux GOARCH=amd64 go build -o dist/nightingale-go-linux-amd64 .
          GOOS=linux GOARCH=arm64 go build -o dist/nightingale-go-linux-arm64 .
          GOOS=darwin GOARCH=amd64 go build -o dist/nightingale-go-mac-amd64 .
          GOOS=darwin GOARCH=arm64 go build -o dist/nightingale-go-mac-arm64 .
          GOOS=windows GOARCH=amd64 go build -o dist/nightingale-go-win-amd64.exe

      - name: Upload Binaries to Release
        run: |
          for file in nightingale-go/src/nightingale/dist/*; do
            asset_name=$(basename "$file")
            curl -X POST --data-binary @"$file" -H "Authorization: token ${{ secrets.TOKEN }}" -H "Content-Type: application/octet-stream" "${{ steps.create_release.outputs.upload_url }}?name=$asset_name"
          done

      - name: Update Release Notes
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.TOKEN }}
          script: |
            const releaseNotes = `
            # Nightingale Binary Update  

            ## Understanding Your Built Binaries  

            Your compiled binaries are optimized for different system architectures:  

            - **nightingale-go-linux-amd64** â†’ Linux on Intel/AMD (x86_64)  
            - **nightingale-go-linux-arm64** â†’ Linux on ARM (Raspberry Pi)  
            - **nightingale-go-mac-amd64** â†’ macOS on Intel Macs  
            - **nightingale-go-mac-arm64** â†’ macOS on Apple Silicon (M1/M2/M3)  
            - **nightingale-go-win-amd64.exe** â†’ Windows on Intel/AMD (x86_64)  

            ## ðŸ’¡ Which One Should You Use?  

            - If youâ€™re on an **Intel Mac**, grab \`nightingale-go-mac-amd64\`.  
            - If youâ€™re on an **M1/M2/M3 Mac**, use \`nightingale-go-mac-arm64\`.  

            Let me know what you think about this update. Drop your thoughts in the comments or join the **discussion channel**!  

            ðŸ’¬ **Discussion Panel** - [https://lnkd.in/duHBQitp](https://lnkd.in/duHBQitp)  
            `;

            await github.rest.repos.updateRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: ${{ steps.create_release.outputs.id }},
              body: releaseNotes
            });