name: Release Binary from Local Source

on:
  push:
    branches:
      - main  # Change to your target branch

jobs:
  release:
    name: Build & Upload Binary
    runs-on: ubuntu-latest

    steps:
      - name: Checkout this repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: stable

      - name: Determine New Release Tag
        id: versioning
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.TOKEN }}
          script: |
            const { data: releases } = await github.rest.repos.listReleases({
              owner: context.repo.owner,
              repo: context.repo.repo,
            });

            let nextTag = "v1.1.2"; // Default if no releases exist
            if (releases.length > 0) {
              const latestTag = releases[0].tag_name;
              const parts = latestTag.match(/v(\d+)\.(\d+)\.(\d+)/);
              if (parts) {
                let [_, major, minor, patch] = parts.map(Number);
                patch++; // Increment patch version
                nextTag = `v${major}.${minor}.${patch}`;
              }
            }

            console.log(`Next release: ${nextTag}`);
            core.setOutput("new_tag", nextTag);

      - name: Create a New GitHub Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ steps.versioning.outputs.new_tag }}
          release_name: Release ${{ steps.versioning.outputs.new_tag }}
          body: "Automated release from the latest commit."
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}

      - name: Build Go Binaries
        working-directory: nightingale-go/src/nightingale
        run: |
          mkdir -p dist
          GOOS=linux GOARCH=amd64 go build -o dist/nightingale-go-linux-amd64 .
          GOOS=linux GOARCH=arm64 go build -o dist/nightingale-go-linux-arm64 .
          GOOS=darwin GOARCH=amd64 go build -o dist/nightingale-go-mac-amd64 .
          GOOS=darwin GOARCH=arm64 go build -o dist/nightingale-go-mac-arm64 .
          GOOS=windows GOARCH=amd64 go build -o dist/nightingale-go-win-amd64.exe

      - name: Upload Binaries to Release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.TOKEN }}
          file: nightingale-go/src/nightingale/dist/nightingale-go-linux-amd64
          asset_name: nightingale-go-linux-amd64
          tag: ${{ steps.versioning.outputs.new_tag }}
          overwrite: true

      - name: Upload Linux ARM64 Binary
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.TOKEN }}
          file: nightingale-go/src/nightingale/dist/nightingale-go-linux-arm64
          asset_name: nightingale-go-linux-arm64
          tag: ${{ steps.versioning.outputs.new_tag }}
          overwrite: true

      - name: Upload macOS AMD64 Binary
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.TOKEN }}
          file: nightingale-go/src/nightingale/dist/nightingale-go-mac-amd64
          asset_name: nightingale-go-mac-amd64
          tag: ${{ steps.versioning.outputs.new_tag }}
          overwrite: true

      - name: Upload macOS ARM64 Binary
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.TOKEN }}
          file: nightingale-go/src/nightingale/dist/nightingale-go-mac-arm64
          asset_name: nightingale-go-mac-arm64
          tag: ${{ steps.versioning.outputs.new_tag }}
          overwrite: true

      - name: Upload Windows AMD64 Binary
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.TOKEN }}
          file: nightingale-go/src/nightingale/dist/nightingale-go-win-amd64.exe
          asset_name: nightingale-go-win-amd64.exe
          tag: ${{ steps.versioning.outputs.new_tag }}
          overwrite: true