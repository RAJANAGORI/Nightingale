###############################################################################
# Nightingale Docker Compose Configuration
# Description: Multi-container setup for Nightingale with Nginx reverse proxy
# Author: Raja Nagori <raja.nagori@owasp.org>
# License: GPL-3.0
###############################################################################

version: '3.8'

# Define reusable configurations
x-common-settings: &common-settings
  restart: unless-stopped
  logging:
    driver: "json-file"
    options:
      max-size: "10m"
      max-file: "3"

services:
  ###########################################################################
  # Nightingale Service
  # Main pentesting environment with ttyd web terminal
  ###########################################################################
  nightingale:
    <<: *common-settings
    image: ghcr.io/rajanagori/nightingale:arm64-optimized
    container_name: nightingale
    hostname: nightingale
    
    # Command to start web-based terminal
    command: ["ttyd", "-p", "7681", "bash"]
    
    # Port mapping: Host:Container
    ports:
      - "8080:7681"  # ttyd web terminal
    
    # Environment variables (add as needed)
    environment:
      - TZ=UTC
      - TERM=xterm-256color
    
    # Resource limits (adjust based on your needs)
    deploy:
      resources:
        limits:
          cpus: '4.0'
          memory: 8G
        reservations:
          cpus: '2.0'
          memory: 4G
    
    # Security options
    security_opt:
      - no-new-privileges:true
    
    # Cap drops for security (remove if you need specific capabilities)
    cap_drop:
      - ALL
    cap_add:
      - NET_ADMIN
      - NET_RAW
      - SYS_PTRACE
    
    # Health check
    healthcheck:
      test: ["CMD", "ttyd", "--version"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    
    # Networking
    networks:
      - nightingale-network
    
    # Labels for documentation and management
    labels:
      com.nightingale.description: "Nightingale pentesting environment"
      com.nightingale.service: "main"

  ###########################################################################
  # Nginx Service (Optional)
  # Reverse proxy for production deployments
  ###########################################################################
  nginx:
    <<: *common-settings
    image: nginx:alpine  # Using alpine for smaller image size
    container_name: nginx
    hostname: nginx
    
    # Dependency management
    depends_on:
      nightingale:
        condition: service_healthy
    
    # Port mapping
    ports:
      - "80:80"    # HTTP
      - "443:443"  # HTTPS
    
    # Volume mounts (read-only for security)
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/certs:/etc/nginx/certs:ro
      - nginx-cache:/var/cache/nginx
      - nginx-logs:/var/log/nginx
    
    # Environment variables
    environment:
      - TZ=UTC
    
    # Resource limits
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 512M
        reservations:
          cpus: '0.5'
          memory: 256M
    
    # Security options
    security_opt:
      - no-new-privileges:true
    
    # Health check
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    
    # Networking
    networks:
      - nightingale-network
    
    # Labels
    labels:
      com.nightingale.description: "Nginx reverse proxy"
      com.nightingale.service: "proxy"

###############################################################################
# Networks Configuration
###############################################################################
networks:
  nightingale-network:
    name: nightingale-net
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.20.0.0/16

###############################################################################
# Volumes Configuration
###############################################################################
volumes:
  nginx-cache:
    name: nightingale-nginx-cache
    driver: local
  nginx-logs:
    name: nightingale-nginx-logs
    driver: local